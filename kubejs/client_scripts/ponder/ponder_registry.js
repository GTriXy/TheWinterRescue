// priority: 0

Ponder.registry((event) => {
	// Bloomery
	event.create([
		"charcoal_pit:main_bloomery",
		"charcoal_pit:sandy_tuyere",
		"charcoal_pit:sandy_brick",
		"charcoal_pit:bellows"
	])
		.tag("the_winter_rescue:bloomery")
		// bloomery building
		.scene("assembly", "1", "kubejs:bloomery", (scene, util) => {
			scene.showBasePlate()
			scene.idle(20)

			scene.world.showSection([2, 1, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection([2, 2, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)

			// Bloomery info scene
			scene.addKeyframe()
			// let pos = util.grid().at(3, 2, 1)
			scene.overlay.showText(50)
				.text("A single Bellow is required for the Bloomery to work")
				.pointAt([3, 2, 1])
			scene.idle(60)
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), [3, 2, 1], 130)
			scene.overlay.showText(50)
				.text("Make sure to check it's vent orientation")
				.pointAt([3, 2, 1])
			scene.idle(60)
			scene.overlay.showText(50)
				.colored(PonderPalette.RED)
				.text("If the vent doesnt face the Tuyere, the Bellow will not work")
				.pointAt([3, 2, 1])
			scene.idle(70)

			scene.addKeyframe()
			scene.overlay.showText(50)
				.text("Right-Click to push air in using the Bellow")
				.pointAt([3, 2, 1])
			scene.idle(30)
			scene.showControls(20, [3, 2, 1], "right")
			scene.world.modifyBlocks([3, 2, 1], state => state.with("push", "true"))
			scene.idle(20)
			scene.world.modifyBlocks([3, 2, 1], state => state.with("push", "false"))
			scene.idle(20)

			// Bloomery extraupgrade scene
			scene.addKeyframe()
			// let pos2 = util.grid().at(1, 2, 1)
			scene.overlay.showOutline("green", {}, [1, 2, 1], 50)
			scene.overlay.showText(50)
				.colored(PonderPalette.GREEN)
				.text("Another Tuyere can be added on this side, just make sure to check it's vent direction")
				.pointAt([1, 2, 1])
			scene.idle(30)
			scene.world.setBlocks([1, 2, 1], "charcoal_pit:bellows", true)
			scene.world.modifyBlocks([1, 2, 1], state => state.with("Direction", Direction.east))
			scene.idle(30)

			scene.world.showSection([2, 3, 2], Direction.DOWN)
			// scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().fromTo(1, 3, 1, 3, 3, 3), 40)
			scene.overlay.showOutline("green", {}, [1, 3, 1, 3, 3, 3], 40)
			scene.overlay.showText(50)
				.colored(PonderPalette.GREEN)
				.text("Another layer can be placed for 2x processing. You cannot stack another layer after this one")
				.pointAt([2, 3, 2])
			scene.idle(40)
		})
		// bloomery usage
		.scene("usage", "Using the bloomery", "kubejs:bloomery", (scene, util) => {
			scene.showBasePlate()
			scene.idle(5)
			scene.world.showSection([2, 1, 2], Direction.DOWN)
			scene.idle(5)
			scene.world.showSection([2, 2, 2], Direction.DOWN)
			scene.idle(5)

			scene.overlay.showOutline("green", {}, [2, 2, 2], 50)
			scene.overlay.showText(50)
				.colored(PonderPalette.GREEN)
				.text("To start processing, use Shift + Right-Click with the first ore in hand (not blocks)")
				.pointAt([2, 2, 2])
			scene.showControls(20, [2, 2, 2], "down")
				.withItem("minecraft:raw_iron")
			scene.idle(50)

			scene.addKeyframe()
			scene.overlay.showText(40)
				.colored(PonderPalette.GREEN)
				.text("After the initial placement, Right-Click the pile with the ore and charcoal")
				.pointAt([2, 2, 2])
			scene.idle(50)

			scene.showControls(40, [2, 2, 2], "right")
				.withItem("minecraft:charcoal")

			let theSection = scene.world.showIndependentSectionImmediately([1, 5, 1, 3, 7, 3]);
			scene.world.moveSection(theSection, [0, -4, 0], 0)
			scene.idle(50)

			scene.addKeyframe()
			scene.overlay.showText(40)
				.colored(PonderPalette.GREEN)
				.text("After filling it up, start it by using a firestarter")
				.pointAt([2, 2, 2])
			scene.showControls(40, [2, 3, 2], "down")
				.withItem("charcoal_pit:fire_starter")
			scene.world.replaceBlocks([1, 5, 1, 3, 7, 3], util.getDefaultState("minecraft:air"), false)

			let swapBlockFromTo = scene.world.showIndependentSectionImmediately([1, 8, 1, 3, 9, 3])

			scene.world.moveSection(scene.world.showIndependentSectionImmediately(swapBlockFromTo), [0, -7, 0], 0)
			scene.idle(50)

			scene.overlay.showText(40)
				.colored(PonderPalette.GREEN)
				.text("Once it's done burning, you can mine it up and collect the iron")
				.pointAt([2, 2, 2])
			scene.idle(40)
		})

	// Generator Consruction (Tier 1)
	event.create([
		"frostedheart:generator",
		"frostedheart:generator_core_t1",
		"frostedheart:generator_amplifier_r1",
		"frostedheart:generator_brick"
	])
		.tag("the_winter_rescue:generator")
		.scene("basic_usage", "", "kubejs:generator_t1", (scene, util) => {
			scene.configureBasePlate(0, 0, 5)
			scene.scaleSceneView(0.7) // zoom out, t2 is big
			scene.showBasePlate()
			scene.idle(10)

			// Generic build
			scene.world.showSection([2, 1, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection([2, 2, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection([2, 3, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection([2, 4, 2], Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)

			// text
			scene.overlay.showText(40)
				.text("Right-Click to assemble")
				.pointAt([3, 2, 1])
			scene.idle(20)
			scene.showControls(40, [2, 2, 1], "right")
				.withItem("immersiveengineering:hammer")

			let = showIndependent = scene.world.showIndependentSectionImmediately([1, 6, 1, 3, 10, 3])
			scene.world.moveSection(showIndependent, [0, -5, 0], 0)
			scene.world.replaceBlocks([1, 1, 1, 3, 4, 3], "minecraft:air", false)
			scene.idle(40)
		})

	// Generator Consruction (Tier 2)
	event.create("the_winter_rescue:generator_construction_t2", ["frostedheart:generator_t2", "frostedheart:invar_block"])
		.tag("the_winter_rescue:generator")
		.scene("basic_usage", "", "kubejs:generator_t2", (scene, util) => {
			scene.configureBasePlate(0, 0, 5)
			scene.scaleSceneView(0.5) // zoom out, t2 is big
			scene.showBasePlate()
			scene.idle(10)

			// Generic build
			scene.world.showSection(util.select().layer(1), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(2), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(3), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(4), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(5), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(6), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(7), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)

			let pos = util.grid().at(2, 2, 1)
			// text
			scene.overlay.showText(40)
				.text("Right-Click to assemble")
				.pointAt([3, 2, 1])
			scene.idle(20)
			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick().withItem("immersiveengineering:hammer"),
				40)
			scene.world.moveSection(scene.world.showIndependentSectionImmediately(util.select().fromTo(1, 8, 1, 3, 15, 3)), util.vector().of(0, -8, 0), 0)
			scene.world.replaceBlocks(util.select().fromTo(1, 1, 1, 3, 7, 3), util.getDefaultState("minecraft:air"), false)
			scene.idle(40)
		})/*.scene("usage", "", "kubejs:generator_t2", (scene, util) => {
            scene.configureBasePlate(0, 0, 5)
            scene.scaleSceneView(1)
            scene.showBasePlate()
            scene.idle(10)
            scene.world.moveSection(scene.world.showIndependentSectionImmediately(util.select().fromTo(1, 8, 1, 3, 15, 3)), util.vector().of(0, -8, 0), 0)
            scene.world.replaceBlocks(util.select().fromTo(1, 1, 1, 3, 7, 3), util.getDefaultState("minecraft:air"), false)
            scene.idle(20)
			scene.addKeyframe()
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().position(2,1,2), 20)
			scene.overlay.showText(20)
                .text("Input heat medium from bottom blue marked ")
                .pointAt(util.vector().blockSurface(util.grid().at(2, 1, 2), Direction.DOWN))
            scene.idle(40)
			scene.addKeyframe()
			
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().position(1,1,2), 60)
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().position(3,1,2), 60)
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().position(2,1,1), 60)
			scene.overlay.showOutline(PonderPalette.GREEN, new Object(), util.select().position(2,1,3), 60)
			scene.overlay.showText(60)
                .text("Export energy from the bottom of these locations")
                .pointAt(util.vector().blockSurface(util.grid().at(2, 1, 2), Direction.DOWN))
			scene.idle(20)
			scene.rotateCameraY(180)
			scene.idle(40)
        })*/

	// Crucible
	event.create("the_winter_rescue:steel_mill", ["immersiveindustry:crucible", "immersiveindustry:burning_chamber", "frostedheart:high_refractory_bricks", "immersiveengineering:blastfurnace_preheater"])
		.tag("the_winter_rescue:crucible")
		.scene("assembly", "", "kubejs:steel_mill_crucible", (scene, util) => {
			scene.configureBasePlate(0, 0, 5)
			scene.scaleSceneView(0.7) // zoom out, t2 is big
			scene.showBasePlate()
			scene.idle(10)

			// Generic build
			scene.world.showSection(util.select().layer(1), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(2), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(3), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(4), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.addKeyframe()
			let pos = util.grid().at(2, 2, 1)
			// text
			scene.overlay.showText(40)
				.text("Right-Click to assemble")
				.pointAt([3, 2, 1])
			scene.idle(20)
			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick().withItem("immersiveengineering:hammer"),
				40)
			scene.world.moveSection(scene.world.showIndependentSectionImmediately(util.select().fromTo(1, 6, 1, 3, 10, 3)), util.vector().of(0, -5, 0), 0)
			scene.world.replaceBlocks(util.select().fromTo(1, 1, 1, 3, 4, 3), util.getDefaultState("minecraft:air"), false)
			scene.idle(40)
			scene.addKeyframe()
			scene.rotateCameraY(180)
			scene.idle(20)
			scene.overlay.showText(40)
				.text("Install Preheater here")
				.pointAt(util.vector().centerOf(util.grid().at(2, 1, 4)))
			scene.idle(20)
			scene.world.moveSection(scene.world.showIndependentSection(util.select().fromTo(0, 6, 4, 4, 10, 4), Direction.north), util.vector().of(0, -5, 0), 0)
			scene.idle(60)
		})
		.scene("basic_usage", "", "kubejs:steel_mill_crucible_usage", (scene, util) => {
			scene.configureBasePlate(0, 0, 6)
			scene.showBasePlate()
			scene.idle(10)

			scene.world.showSection(util.select().fromTo(1, 1, 2, 3, 4, 4), Direction.DOWN)
			scene.idle(20)
			// text
			scene.overlay.showText(40)
				.text("Install Preheater here")
				.pointAt(util.vector().centerOf(util.grid().at(2, 1, 1)))
			scene.idle(20)
			scene.world.showSection(util.select().fromTo(2, 1, 1, 2, 4, 1), Direction.south)
			scene.idle(20)
			scene.overlay.showText(40)
				.text("Power must be provided here")
				.pointAt(util.vector().centerOf(util.grid().at(2, 4, 1)))
			scene.idle(40)
			scene.addKeyframe()
			scene.overlay.showText(20)
				.text("You can either use GUI or automation input")
				.pointAt(util.vector().centerOf(util.grid().at(1, 1, 2)))
			scene.idle(40)
			scene.addKeyframe()
			let itemloc = util.vector().centerOf(util.grid().at(2, 5, 3));
			scene.overlay.showText(20)
				.text("Ingredients can be throw into crucible")
				.pointAt(itemloc)
			scene.idle(20)
			scene.showControls(new PonderInput(itemloc, PonderPointing.DOWN).withItem("kubejs:flux"), 10)
			scene.idle(12)
			let fluxItem = scene.world.createItemEntity(itemloc, util.vector().of(0, 0, 0), Ingredient.of("kubejs:flux"))
			scene.idle(20)
			scene.showControls(new PonderInput(itemloc, PonderPointing.DOWN).withItem("minecraft:iron_ingot"), 10)
			scene.idle(12)
			let ironItem = scene.world.createItemEntity(itemloc, util.vector().of(0, 0, 0), Ingredient.of("minecraft:iron_ingot"))
			scene.idle(40)
			scene.addKeyframe()
			scene.overlay.showText(20)
				.text("Ingredients can also insert into crucible on the top")
				.pointAt(itemloc)
			scene.world.showSection(util.select().position(2, 5, 2), Direction.DOWN)
			scene.idle(20)
			scene.showControls(new PonderInput(util.vector().centerOf(util.grid().at(2, 5, 2)), PonderPointing.DOWN).withItem("minecraft:iron_ingot"), 10);
			scene.idle(20)
			scene.showControls(new PonderInput(util.vector().centerOf(util.grid().at(2, 5, 2)), PonderPointing.DOWN).withItem("kubejs:flux"), 10);
			scene.idle(40)
			scene.addKeyframe()
			scene.rotateCameraY(90)
			scene.idle(20)
			scene.world.showSection(util.select().fromTo(4, 1, 0, 5, 2, 5), Direction.west)
			scene.overlay.showText(20)
				.text("Coke coal can insert to the burners")
				.pointAt(util.grid().at(4, 1, 3))
			scene.showControls(new PonderInput(util.vector().centerOf(util.grid().at(4, 1, 3)), PonderPointing.DOWN).withItem("immersiveengineering:coal_coke"), 20);
			scene.idle(40)
			scene.addKeyframe()
			scene.world.showSection(util.select().fromTo(4, 2, 0, 5, 5, 5), Direction.north)
			scene.overlay.showText(20)
				.text("Products can be extracted from sides of the crucible part")
				.pointAt(util.vector().centerOf(util.grid().at(4, 4, 3)))
			scene.idle(20)

			scene.world.createItemOnBelt(util.grid().at(4, 3, 3), Direction.up, "immersiveengineering:ingot_steel");
			//scene.overlay
			scene.idle(40)
		})

	event.create("the_winter_rescue:steam_turbine", ["immersiveindustry:steam_turbine", "immersiveengineering:generator"])
		.tag("the_winter_rescue:steam_turbine")
		.scene("basic_usage", "", "kubejs:steam_turbine", (scene, util) => {
			scene.rotateCameraY(130)
			scene.scaleSceneView(0.7) // zoom out, t2 is big
			scene.configureBasePlate(0, 0, 9) // baseplace is a square
			scene.showBasePlate()
			scene.idle(20)

			scene.world.showSection(util.select().layer(1), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(2), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)
			scene.world.showSection(util.select().layer(3), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)

			scene.rotateCameraY(-110)
			let pos = util.grid().at(2, 2, 1)
			scene.overlay.showText(40)
				.text("Right-Click to assemble")
				.pointAt([3, 2, 1])
			scene.idle(20)
			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick().withItem("immersiveengineering:hammer"),
				40)
			scene.world.moveSection(scene.world.showIndependentSectionImmediately(util.select().fromTo(1, 5, 1, 3, 10, 7)), util.vector().of(0, -4, 0), 0)
			scene.world.replaceBlocks(util.select().fromTo(1, 1, 1, 3, 3, 7), util.getDefaultState("minecraft:air"), false)
			scene.idle(60)
			scene.addKeyframe()
			scene.rotateCameraY(180)
			scene.overlay.showText(40)
				.text("Input steam here")
				.pointAt(util.grid().at(1, 2, 8))
			scene.idle(60)
		})


	event.create("the_winter_rescue:charcoal_pit", ["charcoal_pit:log_pile"])
		.tag("the_winter_rescue:charcoal_pit")
		.scene("basic_usage", "", "kubejs:charcoal_pit", (scene, util) => {
			scene.showBasePlate()
			scene.idle(20)

			scene.world.showSection(util.select().layer(1), Direction.DOWN)
			scene.world.showSection(util.select().layer(2), Direction.DOWN)
			scene.idle(30)

			scene.showControls(new PonderInput(util.vector().blockSurface(util.grid().at(2, 2, 2), Direction.DOWN), PonderPointing.RIGHT)
				.rightClick()
				.withItem("charcoal_pit:fire_starter"), 40)
			scene.addKeyframe()
			scene.idle(20)

			let pos = util.grid().at(2, 2, 2)
			scene.world.setBlock(pos, util.getDefaultState("minecraft:fire"), true)
			scene.world.modifyBlocks(util.grid().at(2, 1, 2), state => state.with("lit", true))
			scene.idle(40)

			scene.world.setBlock(pos, util.getDefaultState("minecraft:air"), true)
			let theSection = scene.world.showIndependentSection(util.select().position(2, 3, 2), Direction.DOWN)
			scene.world.moveSection(theSection, util.vector().of(0, -1, 0), 0)
			scene.addKeyframe()
			scene.idle(60)
			scene.world.hideSection(util.select().fromTo(1, 1, 1, 3, 1, 3), Direction.DOWN)
			scene.world.hideIndependentSection(theSection, Direction.DOWN)
			scene.idle(20)

			scene.world.setBlock(util.grid().at(2, 3, 2), util.getDefaultState("minecraft:air"), false)
			scene.world.replaceBlocks(util.select().fromTo(1, 1, 1, 3, 1, 3), util.getDefaultState("minecraft:air"), false)
			scene.world.moveSection(scene.world.showIndependentSection(util.select().fromTo(0, 4, 0, 4, 4, 4), Direction.DOWN), util.vector().of(0, -3, 0), 0)
			scene.world.setBlocks(util.select().fromTo(1, 1, 1, 3, 1, 3), util.getDefaultState("charcoal_pit:log_pile"), false)
			scene.world.showSection(util.select().fromTo(1, 1, 1, 3, 1, 3), Direction.DOWN)
			scene.addKeyframe()
			scene.idle(40)

			scene.showControls(new PonderInput(util.vector().blockSurface(util.grid().at(2, 2, 2), Direction.DOWN), PonderPointing.RIGHT)
				.rightClick()
				.withItem("charcoal_pit:fire_starter"), 40)
			scene.idle(20)

			scene.world.setBlocks(util.select().fromTo(1, 2, 1, 3, 2, 3), util.getDefaultState("minecraft:fire"), false)
			scene.world.modifyBlocks(util.grid().at(2, 1, 2), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(1, 1, 2), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(3, 1, 2), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(2, 1, 1), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(1, 1, 1), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(3, 1, 1), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(2, 1, 3), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(1, 1, 3), state => state.with("lit", true))
			scene.world.modifyBlocks(util.grid().at(3, 1, 3), state => state.with("lit", true))
			scene.idle(40)

			scene.world.replaceBlocks(util.select().fromTo(1, 2, 1, 3, 2, 3), util.getDefaultState("minecraft:air"), false)
			scene.world.moveSection(scene.world.showIndependentSection(util.select().fromTo(1, 5, 1, 3, 5, 3), Direction.DOWN), util.vector().of(0, -3, 0), 0)
			scene.idle(20)
		})
	event.create("the_winter_rescue:pottery_kiln", ["charcoal_pit:straw", "charcoal_pit:clay_pot"])
		.tag("the_winter_rescue:charcoal_pit")
		.scene("basic_usage", "", "kubejs:pottery_kiln", (scene, util) => {
			scene.showBasePlate()
			scene.scaleSceneView(1)
			scene.idle(20)

			scene.showControls(new PonderInput(util.vector().blockSurface(util.grid().at(1, 1, 1), Direction.DOWN), PonderPointing.RIGHT)
				.whileSneaking()
				.rightClick()
				.withItem("minecraft:cobblestone"), 40)
			scene.idle(40)

			scene.world.showSection(util.select().layer(1), Direction.DOWN)
			scene.idle(40)

			scene.overlay.showText(60)
				.text("Surrounding blocks can be ANY block, not just dirt.")
				.pointAt(util.grid().at(2, 1, 2))

			scene.world.moveSection(scene.world.showIndependentSection(util.select().fromTo(0, 2, 0, 2, 2, 2), Direction.DOWN), util.vector().of(0, -1, 0), 0)
			scene.addKeyframe()
			scene.idle(30)

			let pos = util.grid().at(1, 1, 1)
			scene.world.setBlock(pos, util.getDefaultState("minecraft:air"), false)
			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick()
				.withItem("charcoal_pit:straw"), 30)
			scene.world.moveSection(scene.world.showIndependentSection(util.select().position(2, 3, 1), Direction.DOWN), util.vector().of(-1, -2, 0), 0)
			scene.idle(40)

			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick()
				.withItem("minecraft:oak_log"), 30)
			scene.world.moveSection(scene.world.showIndependentSection(util.select().position(0, 3, 1), Direction.DOWN), util.vector().of(1, -2, 0), 0)
			scene.idle(40)

			scene.showControls(new PonderInput(util.vector().blockSurface(pos, Direction.DOWN), PonderPointing.RIGHT)
				.rightClick()
				.withItem("charcoal_pit:fire_starter"), 40)
			scene.world.setBlock(util.grid().at(1, 2, 1), util.getDefaultState("minecraft:fire"), true)
			scene.world.showSection(util.select().position(1, 2, 1), Direction.up)
			scene.addKeyframe()
			scene.idle(60)
		})
})